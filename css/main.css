/* COMMON */
body {
  color: #333;
  font-family: "Nanum Gothic", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  height: 3000px;
}
img {
  display: block;
}
a {
  text-decoration: none;
  /* color: #999; */
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}

.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  /* 부모요소로부터 특정 사이즈를 부여받을 수 있으니 여기서 명시한다. */
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: 0.4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
/* 일치선택자 */
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover {
  /* transparent(투명한, 명백한, 속이 뻔히 들여다 보이는, 명료한, 알기 쉬운)*/
  background-color: transparent;
  color: #333;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592b18;
}
.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #d9aa8a;
}
.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* Header */
header {
  /* width를 100%로 안주면 화면이 줄어들었을때 보이지 않음 */
  width: 100%;
  /* position: relative; */
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  /* absolute와 fixed는 가로넓이가 최소한으로 줄어드려고 한다. 즉 width:auto가 된다.(?), 이제 relative가 아닌 fixed로 위치상의 부모요소가 된다. */
  position: fixed;
  top: 0;
  z-index: 9;
}

header > .inner {
  height: 120px;
}
header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

header .sub-menu {
  display: flex;
  top: 10px;
  right: 0;
  position: absolute;
}
header .sub-menu ul.menu {
  display: flex;
  font-family: Arial sans-serif;
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
header .sub-menu ul.menu li:first-child:before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}
header .sub-menu .search {
  position: relative;
  height: 34px;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width 0.4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: 0.7;
}
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* main-menu */
header .main-menu {
  display: flex;
  position: absolute;
  bottom: 0;
  right: 0;
  /* header에 z-index를 줘서 필요 없을거 같은데 */
  z-index: 1;
}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  padding: 20px 0;
  display: flex;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("/images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

/* bedges */
header .bedges {
  /* 부모는 header가 되겠다. 위치상의 부모로 하기 위해 relative를 추가해주자 */
  position: absolute;
  top: 132px;
  right: 12px;
}
header .bedges .bedge {
  /* hidden을 주지 않으면 깍이지 않는데, 그 이유는 div는 깍였지만 이미지가 깍이지 않은 것이라 hidden으로 넘치는 이미지를 숨겨버린 것이다. => 그 결과 깍이는 모양이 나옴 */
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  /* 10px은 blur고 4px은 머라고 ?.. */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* visual */
.visual {
  /* header의 inner 높이값, header는 높이값이 없기때문에(auto) 최대한 줄어들려고 한다. 그래서 안의 콘텐츠인 inner의 높이값을 가진다. */
  margin-top: 120px;
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
}
.visual .inner {
  /* 맨 위에 inner에 몇가지 속성을 지정해 놨지요?? */
  height: 646px;
}
/* inner 생략해줘도 된다. 그냥 중앙으로 몰아주기 위함이기 때문에 visual과 직접적인 곤련은 없다. */
.visual .title {
  /* common에 inner에 포지션을 이미 지정해 놨기 때문에 구조상의 inner인 .visual .inner에 또 굳이 포지션을 먹일 필요가 없다. */
  position: absolute;
  top: 88px;
  left: -10px;
}
.visual .title .btn {
  /* 위의 title에 absolute라는 포지션이 들어가 있으므로, 구조,위치상의 부모가 잘 될것이다.  */
  position: absolute;
  top: 259px;
  left: 173px;
}
/* 일치 선택자 class:"cup1 image" 이렇게 되어있구나(둘 다 만족해야됨) */
.visual .cup1.image {
  position: absolute;
  bottom: 0;
  /* 0이면 공간이 오른쪽에 조금 존재한다. */
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 321;
  right: 416px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
